#!/usr/bin/env python

import bipca
import argparse
import scanpy as sc
parser = argparse.ArgumentParser(prog='BiPCA', description = "Run bistochastic PCA on count data.")
parser.add_argument('X', metavar='X',type=str, help='Path to the input .h5ad file, \n '+
	'which stores a non-negative count matrix in its .X key.')
parser.add_argument('Y', metavar='Y',type=str, help='Output path')
parser.add_argument('-v','--verbose',type=int, default = 1, 
	choices = [0,1,2,3],help="Logging level {0,1,2,3} to use.")
parser.add_argument('-w','--write-debug', action='store_true', help="Write all of the associated matrices to the output."+
	"By default, only the re-scaled output is written along with its rank.")
parser.add_argument('-r','--randomized',action='store_true', help="Use randomized SVD to compute bipca." + 
	"Recommended for large sparse matrices.")
parser.add_argument('-a','--approximate-sigma', action ='store_true', help='Approximate the noise variance by using a subsampled matrix.'+
	' Recommended for large matrices.')
parser.add_argument('-k','--ncomponents',type=int,help='Number of PCs to compute during denoising.'+ 
	' Choosing a small number accelerates the algorithm, but can lead to slowdown due to underestimating the rank.')
parser.add_argument('-q','--q', type=float, default=0.0, help='Pre-estimated q-value. Used with -qits 0.')
parser.add_argument('-qits','--qits',type=int, default = 1,help="Number of iterations for variance estimation.")
args = parser.parse_args()